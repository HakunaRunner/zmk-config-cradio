// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Home row mods macro
#define HRML(k1,k2,k3,k4) &ht LGUI k1  &ht LALT k2  &ht LCTRL k3  &ht LSHFT k4
#define HRMR(k1,k2,k3,k4) &ht RSHFT k1  &ht RCTRL k2  &ht LALT k3  &ht RGUI k4

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // Q + W = Tab
        combo_qw_tab {
            timeout-ms = <30>;
            key-positions = <0 1>;
            bindings = <&kp TAB>;
        };

        // I + O = Backspace
        combo_io_bspc {
            timeout-ms = <30>;
            key-positions = <7 8>;
            bindings = <&kp BSPC>;
        };

        // O + P = Escape
        combo_op_esc {
            timeout-ms = <30>;
            key-positions = <8 9>;
            bindings = <&kp ESC>;
        };

        // L + ;  = '
        combo_l_r_sqt {
            timeout-ms = <30>;
            key-positions = <18 19>;
            bindings = <&kp SQT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
            &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
            HRML(A,        S,         D,         F)     &kp G          &kp H      HRMR(J,        K,         L,        SQT)
            &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH
                                            &lt 1 TAB   &lt 2 SPACE     &lt 3 ENTER  &lt 4 BKPC
            >;
        };

        right_layer {
            bindings = <
            &kp EXLM    &kp AT    &kp HASH    &kp DLR    &kp PERC    &kp CIRC    &kp AMPR    &kp AST    &kp TILD    &kp GRV
            &kp LBRK    &kp LT    &kp LPRN    &kp LCBR   &kp PLUS    &kp MINUS   &kp RCBR    &kp RPRN   &kp GT      &kp RBRK
            &kp NO      &kp NO    &kp NO      &kp NO     &kp EQL     &kp UND     &kp NO      &kp NO     &kp NO      &kp NO
                                             &trans     &kp ESC        &trans     &trans
            >;
        };

        left_layer {
            bindings = <
            &trans     &kp LBKT   &kp LBRC   &kp RBRC   &trans         &kp CARET  &kp LPAR   &kp RPAR   &kp RBKT   &kp TILDE
            &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp PRCNT      &kp ASTRK  &kp MINUS  &kp EQUAL  &kp BSLH   &kp GRAVE
            &trans     &trans     &trans     &trans     &trans         &kp AMPS   &kp UNDER  &kp PLUS   &kp PIPE   &trans
                                             &trans     &trans         &trans     &trans
            >;
        };

        tri_layer {
            bindings = <
           &sys_reset  &trans     &trans     &trans    &bt BT_SEL 0    &trans     &trans     &trans     &trans    &sys_reset
          &bootloader  &trans     &trans     &trans    &bt BT_SEL 1    &trans     &trans     &trans     &trans    &bootloader
            &trans     &trans     &trans    &bt BT_CLR &bt BT_SEL 2    &trans     &trans     &trans     &trans     &trans
                                             &trans     &trans         &trans     &trans
            >;
        };
    };
};
