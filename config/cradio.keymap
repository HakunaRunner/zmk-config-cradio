// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define DEF 0
#define FUN 1
#define SYM 2
#define NAV 3
#define NUM 4
#define MOUSE

// https://zmk.dev/docs/development/hardware-integration/soft-off-setup?advanced-methods=wakeup&kscan-type=dkscan

/ {
    keys {
        compatible = "gpio-keys";

        soft_off_gpio_key: soft_off_gpio_key { gpios = <&gpio1 6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>; };
    };

    wakeup_scan: wakeup_scan {
        compatible = "zmk,kscan-gpio-direct";
        input-keys = <&soft_off_gpio_key>;
        wakeup-source;
    };

    side_band_behavior_triggers: side_band_behavior_triggers {
        compatible = "zmk,kscan-sideband-behaviors";
        kscan = <&wakeup_scan>;
        auto-enable;
        wakeup-source;
    };

    soft_off_wakers {
        compatible = "zmk,soft-off-wakeup-sources";
        wakeup-sources = <&wakeup_scan>;
    };
};

/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        mmv {
            acceleration-exponent = <3>;
            time-to-max-speed-ms = <600>;
            delay-ms = <0>;
        };

        msc {
            acceleration-exponent = <0>;
            time-to-max-speed-ms = <40>;
            delay-ms = <0>;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <31 32>;
            layers = <0>;
        };

        tog_nav {
            bindings = <&tog 3>;
            key-positions = <30 33>;
            layers = <0 1 2 3 4>;
        };

        win_desk_left {
            bindings = <&win_desk_left>;
            key-positions = <20 21>;
        };

        win_desk_right {
            bindings = <&win_desk_right>;
            key-positions = <28 29>;
        };
    };

    macros {
        win_desk_left: win_desk_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LC(LEFT))>;
            label = "WIN_DESK_LEFT";
        };

        win_desk_right: win_desl_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LC(RIGHT))>;
            label = "WIN_DESL_RIGHT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q       &kp W       &kp E        &kp R         &kp T          &kp Y        &kp U         &kp I        &kp O       &kp P
&ht LGUI A  &ht LALT S  &ht LCTRL D  &ht LSHIFT F  &kp G          &kp H        &ht LSHIFT J  &ht RCTRL K  &ht RALT L  &ht RIGHT_GUI SEMICOLON
&kp Z       &kp X       &kp C        &kp V         &kp B          &kp N        &kp M         &kp COMMA    &kp DOT     &kp FSLH
                                     &lt 2 TAB     &lt 4 SPACE    &lt 1 ENTER  &lt 3 BSPC
            >;
        };

        first_layer {
            bindings = <
&kp F1    &kp F2    &kp F3     &kp F4     &kp F5     &kp F6   &kp F7     &kp F8     &kp F9    &kp F10
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &kp INS    &kp DEL  &kp RSHFT  &kp RCTRL  &kp LALT  &kp LGUI
&kp F11   &none     &kp CAPS   &none      &none      &none    &none      &kp PSCRN  &none     &kp F12
                               &trans     &trans     &trans   &trans
            >;
        };

        second_layer {
            bindings = <
&kp EXCL  &kp AT    &kp HASH          &kp DLLR           &kp PRCNT    &kp CARET  &kp AMPS  &kp ASTRK  &kp GRAVE  &kp TILDE
&kp LBKT  &kp LT    &kp LPAR          &kp LBRC           &kp PLUS     &kp MINUS  &kp RBRC  &kp RPAR   &kp GT     &kp RBKT
&kp BSLH  &kp PIPE  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp EQUAL    &kp UNDER  &none     &kp COMMA  &kp DOT    &kp FSLH
                                      &trans             &trans       &trans     &trans
            >;
        };

        third_layer {
            bindings = <
&none           &none           &none           &none            &none              &none     &none     &mkp MB3  &none      &none
&msc SCRL_LEFT  &msc SCRL_UP    &mmv MOVE_UP    &msc SCRL_DOWN   &msc SCRL_RIGHT    &mkp MB4  &mkp MB1  &kp UP    &mkp MB2   &mkp MB5
&none           &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none              &none     &kp LEFT  &kp DOWN  &kp RIGHT  &none
                                                &trans           &trans             &trans    &trans
            >;
        };

        forth_layer {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &none   &none   &none     &none   &none   &none   &none   &bt BT_CLR
&kp N1        &kp N2        &kp N3  &kp N4  &kp N5    &kp N6  &kp N7  &kp N8  &kp N9  &kp N0
&none         &none         &none   &none   &none     &none   &none   &none   &none   &none
                                    &trans  &trans    &trans  &trans
            >;
        };
    };
};
